<Project>
  <Import Project="$(MSBuildThisFileDirectory)Directory.Version.props"/>

  <!-- Common build settings -->
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <!-- By default is not packable -->
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <!-- Assembly & Package properties -->
  <PropertyGroup>
    <Company>fkthat.net</Company>
    <Copyright>Â© fkthat.net, 2023</Copyright>
    <Authors>fkthat</Authors>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/fkthat/$(RepositoryName)</RepositoryUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/fkthat/$(RepositoryName)</PackageProjectUrl>
  </PropertyGroup>

  <!-- Embed release notes into the package (if the project is packable) -->
  <PropertyGroup>
    <PackageReleaseNotes>@(ReleaseNotes, '%0a')</PackageReleaseNotes>
  </PropertyGroup>

  <Target Name="PreparePackageReleaseNotesFromFile" BeforeTargets="GenerateNuspec">
    <ReadLinesFromFile File="RELEASE-NOTES" >
      <Output TaskParameter="Lines" ItemName="ReleaseNotes"/>
    </ReadLinesFromFile>
  </Target>

  <!-- Make internals visible to Castle (for tests) -->
  <ItemGroup>
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2"/>
  </ItemGroup>

  <!--
     Determine the type of project
  -->
  <PropertyGroup>
    <ProjectType Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(MSBuildProjectName)', '.*\.Tests$'))">UnitTests</ProjectType>
    <ProjectType Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(MSBuildProjectName)', '.*\.Tests\.Integration$'))">IntegrationTests</ProjectType>
    <IsTests Condition="'$(ProjectType)' == 'UnitTests' Or '$(ProjectType)' == 'IntegrationTests'">true</IsTests>
  </PropertyGroup>

  <!--
    Code analysis and Xml docs
  -->
  <PropertyGroup Condition="'$(ProjectType)' == ''">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>latest-All</AnalysisLevel>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <WarnOnPackingNonPackableProject>false</WarnOnPackingNonPackableProject>
    <IsTransformWebConfigDisabled>true</IsTransformWebConfigDisabled>
  </PropertyGroup>

  <!--
    Attributes for a 'working' project
  -->
  <ItemGroup Condition="'$(ProjectType)' == ''">
    <InternalsVisibleTo Include="$(MSBuildProjectName).Tests" />
    <InternalsVisibleTo Include="$(MSBuildProjectName).Tests.Integration" />
    <AssemblyAttribute Include="System.CLSCompliantAttribute">
      <_Parameter1>true</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <!--
    References for test projects
  -->
  <ItemGroup Condition="'$(IsTests)' == 'true'">
    <PackageReference Include="FakeItEasy" />
    <PackageReference Include="FluentAssertions" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="xunit" />
    <PackageReference Include="xunit.runner.visualstudio">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <Using Include="FakeItEasy" />
    <Using Include="FluentAssertions" />
    <Using Include="Xunit" />
  </ItemGroup>

  <!--
    Determine the 'SUT' project name
  -->
  <PropertyGroup>
    <SutProjectName>$([System.Text.RegularExpressions.Regex]::Replace('$(MSBuildProjectName)', '\.Tests(\.Integration)?$', ''))</SutProjectName>
  </PropertyGroup>

  <!--
    Ajust the root namespace
  -->
  <PropertyGroup>
    <RootNamespace>$(SutProjectName)</RootNamespace>
  </PropertyGroup>

  <!--
    Code coverage (Unit tests only)
  -->
  <PropertyGroup Condition="'$(ProjectType)' == 'UnitTests'">
    <CollectCoverage>true</CollectCoverage>
    <CoverletOutputFormat>cobertura</CoverletOutputFormat>
    <CoverletOutput>TestResults/</CoverletOutput>
    <DefaultItemExcludes>TestResults\**</DefaultItemExcludes>
    <!-- Include only the Sut project into code coverage -->
    <Include>[$(SutProjectName)]*</Include>
    <!-- Exclude the bootstrap code from code coverage -->
    <Exclude>[*]Program,[*]*.Program,[*]*.Startup</Exclude>
  </PropertyGroup>
  <ItemGroup Condition="'$(ProjectType)' == 'UnitTests'">
    <PackageReference Include="coverlet.msbuild">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <!--
    SUT project reference
  -->
  <PropertyGroup>
    <SutProjectPath>..\..\src\$(SutProjectName)\$(SutProjectName).csproj</SutProjectPath>
  </PropertyGroup>
  <ItemGroup Condition="'$(IsTests)' == 'true' and Exists($(SutProjectPath))">
    <ProjectReference Include="$(SutProjectPath)"/>
  </ItemGroup>
</Project>
